apply plugin: 'scala'

fileTree(dir: 'gradle', includes: ['*.gradle']).each { apply from: it }

def defaultEncoding = 'UTF-8'

repositories {
	mavenCentral()
}

dependencies {
        scalaTools group: 'org.scala-lang', name: 'scala-compiler', version: '2.9.+'
        scalaTools group: 'org.scala-lang', name: 'scala-library', version: '2.9.+'
        compile group: 'org.scala-lang', name: 'scala-library', version: '2.9.+'
}

fileTree(dir: 'src/main', includes: ['**/*.scala']).each {File file ->
	def path =  relativePath(file.path)	
	def kind = path.split(/\./).toList().last()
	def taskName = path - "src/main/${kind}/" - ".${kind}"
	taskName = taskName.replaceAll('/','.')
        task "$taskName"(type: JavaExec, dependsOn: classes){
                   group = "Run"
                   description = "Run the $taskName program($kind)"
                   main = taskName
                   classpath sourceSets.main.output + sourceSets.main.runtimeClasspath
        }

}
	

task makeDirs(description : 'make all dirs for project setup', group: 'Prepare') << {
  def sources = [sourceSets.main, sourceSets.test]
  sources*.allSource*.srcDirs.flatten().each { File srcDir ->
    println "making $srcDir"
    srcDir.mkdirs()
  } 
}
